
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
==========> PLAN DE CONTENU
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo

00 - Apprendre REACT + Hooks  (react avec classes et react avec les fonctions)
01 - Commencer un projet next js 15
02 - Faire un projet in memory (API in memory)
03 - Finir les CRUDS in meomory
04 - Continuer le projet mais en ajoutant la pagination + tri + fonctionnalités avancées

05 - Ajout de la persistance + ORM PRISMA- Faire un projet avec Postgress Windows
06 - Ajout de la persistance + ORM PRSIMA - Faire un projet avec Postgress Linux et docker-compose
07 - Ajout de la persistance + ORM PRISMA - Faire un projet avec Pstgress CLOUD (NEON)
08 - OPTIONNEL - Changer l'environnement (ORM PRISMA + CLOUD NÉON) seront remplacés par ORM DRIZZLE + CLOUD XATA.
09 - Ajout des pages web (Layout.tsx + page.tsx)
10 - Authentification avec JWT 
11 - Authentification avec Next AUTH 
12 - Authentification avec Clerck 














oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
==========> THINKIFIC PARTIE 01 - APP ROUTER VS PAGE ROUTER
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
https://github.com/inskillflow/hello-nextjs-demo-pages-routers
https://github.com/inskillflow/hello-nextjs-demo-app-router-sans-src
https://github.com/inskillflow/hello-nextjs-demo-app-router-avec-src










oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
==========> THINKIFIC PARTIE 02 - LINT
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
https://github.com/inskillflow/hello-nextjs-demo-lint.git





oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
==========> THINKIFIC PARTIE 03 - CRUD IN MEMORY
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
https://github.com/inskillflow/hello-crud-in-memory
https://github.com/inskillflow/nextjs-search-pagination






oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
==========> THINKIFIC PARTIE 04 - MEMORY-2-CRUD AVANCÉ, Recherche et Pagination
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo



- https://github.com/inskillflow/nextjs-search-pagination-1
- https://github.com/inskillflow/nextjs-search-pagination-2 
- https://github.com/inskillflow/nextjs-search-pagination-1vs2


PROJETS À COMPARER

1-Challenge Avancé –Zod en pratique - schémas, coercion, erreurs et intégration Next
2-SUITE 1 Challenge Avancé –Zod en pratique-tests.txt
3-SUITE 2 Challenge Avancé –Zod en pratique-tests.txt

DOCUMENTATION IMPORTANTE POUR COMPARER (TÉLÉCHARGER LES .TXT)

- Étape 3.2 – Pratique 2 avec erreurs simulées – CRUD AVANCÉ, Recherche et Pagination
- ANNEXE 3.2.1 – Cas d’erreur simulée (débogage)
- ANNEXE 3.2.2 – (THÉORIQUE) – Concepts et Technologies Expliqués – Projet Next.js 15 API CRUD
- ANNEXE 3.2.3 – Challenge IMPORTANT Avancé – Zod en pratique : schémas, coercion, erreurs et intégration Next
- ANNEXE 3.2.4 – Suite 1 du challenge Avancé (Zod en pratique)
- ANNEXE 3.2.5 – Suite 2 du challenge Avancé (Zod en pratique)
- ANNEXE 3.2.6 – Série de tests (valable pour les deux projets)
- Tableau récapitulatif – Tests complets de l’API Articles (Next.js 15)
- ANNEXE 3.2.7 – (COMMANDES ESSENTIELLES PRATIQUE 2) – API AVANCÉE RECHERCHE ET PAGINATION.

(TXT1) - https://www.inskillflow.com/courses/take/next-react-fr-2/downloads/69217801-annexe-3-2-3-challenge-important-avance-zod-en-pratique-schemas-coercion-erreurs-et-integration-next
(TXT2) - https://www.inskillflow.com/courses/take/next-react-fr-2/downloads/69217860-annexe-3-2-4-suite-1-du-challenge-avance-zod-en-pratique
(TXT3) - https://www.inskillflow.com/courses/take/next-react-fr-2/downloads/69217975-annexe-3-2-5-suite-2-du-challenge-avance-zod-en-pratique
(TESTS HTTP ET RÉPONSES JSON) - https://github.com/inskillflow/nextjs-search-pagination-1vs2/blob/main/nextjs-search-pagination-1/src/tests/api-tests.http
(TESTS HTTP ET RÉPONSES JSON) - https://github.com/inskillflow/nextjs-search-pagination-1vs2/blob/main/nextjs-search-pagination-1/src/tests/api-tests-2.http
(TESTS HTTP ET RÉPONSES JSON) - https://www.inskillflow.com/courses/take/next-react-fr-2/texts/69218105-tableau-recapitulatif-tests-complets-de-l-api-articles-next-js-15
(TESTS HTTP ET RÉPONSES JSON) - https://www.inskillflow.com/courses/take/next-react-fr-2/downloads/68943318-annexe-3-2-7-commandes-essentielles-pratique-2-api-avancee-recherche-et-pagination




oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
==========> THINKIFIC PARTIE 05 - PERSITANCE-POSTGRESS WINDOWS-DOCKER-NEON
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo

- https://github.com/hrhouma1/next-01-projet03-in-prisma
- https://github.com/inskillflow/next-01-in-prisma-windows
- https://github.com/inskillflow/next-01-in-prisma-windows/tree/main/guide_windows
- https://github.com/inskillflow/next-01-in-prisma-docker-compose
- https://github.com/inskillflow/next-01-in-prisma-docker-compose/tree/main/guide_docker_composer
==> TRÈS IMPORTANT: https://github.com/inskillflow/next-01-in-prisma-docker-compose/blob/main/guide_docker_composer/03-etape-4.2-migrations-incrementales-docker-compose-postgresql-prisma.txt
- https://github.com/hrhouma1/next-01-projet03-in-prisma/blob/main/guide_docker_composer/01-guide2.md (GUIDE)
- https://github.com/hrhouma1/next-01-projet03-in-prisma/blob/main (PROJET)

 
 
 
 
 
 
 
 
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
==========> THINKIFIC PARTIE 06 - CLERCK 
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
 
 
--------------------------------------------
01 - PROJET 1 DE BASE (TRÈS BASIQUE - À IGNORER)
--------------------------------------------
==>  https://github.com/hrhouma1/next-01-projet04-clerk-app-demo1


--------------------------------------------
02 - PROJET 2 AVEC STYLE COURS (COMMENCER ICI)
--------------------------------------------
==>
https://github.com/hrhouma1/next-01-evaluation-du-lab2-auth-clerk-1.git
https://github.com/hrhouma1/next-01-evaluation-du-lab2-auth-clerk-1/tree/main/01-documentation-01
https://github.com/hrhouma1/next-01-evaluation-du-lab2-auth-clerk-1/tree/main/02-documentation-02
https://github.com/hrhouma1/next-01-evaluation-du-lab2-auth-clerk-1/tree/main/03-documentation-03
https://github.com/hrhouma1/next-01-evaluation-du-lab2-auth-clerk-1/tree/main/04-documentation-04
https://github.com/hrhouma1/next-01-evaluation-du-lab2-auth-clerk-1/tree/main/05-documentation-05
https://github.com/hrhouma1/next-01-evaluation-du-lab2-auth-clerk-1/tree/main/06-documentation-06


----------------------------------------------------------------------------------------
03 - PROJET 3 AVEC 2 Bases de données (Clerck + PRISMA) - AVANCÉ
----------------------------------------------------------------------------------------
==> + CLERCK 2
Documentation 06 - Est-ce que je dois relier la base Clerk (utilisateurs) à ma base métier (produits, panier, etc.) ?

https://github.com/hrhouma1/next-01-evaluation-du-lab3-auth-clerk-1



 
 
 
 
 
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
==========> THINKIFIC PARTIE 07 - NEXT AUTH
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
 
https://github.com/hrhouma/next-auth  
https://github.com/hrhouma1/next-01-evaluation-lab2
https://github.com/hrhouma1/next-01-evaluation-du-lab2 
https://github.com/hrhouma1/next-01-evaluation-du-lab2-projet-final
https://github.com/hrhouma1/next-02-projet01-next-auth-azure-ghaction
https://github.com/hrhouma1/next-02-projet02-next-jwt-hostinger-ghaction

 
 
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
==========> THINKIFIC PARTIE 08 - - JWT- NEXT AUTH - CLERCK 
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
 
 
Notre stack technologique résout ces défis avec :
- Clerk pour l'authentification
- ShadCN UI pour l'interface
- Middlewares pour le contrôle d'accès




oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
==========> ÉVALUATIONS 
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo

ÉVALUATION 1 ==> REACT
ÉVALUATION 2 ==> Développement de l'API + CRUDS
ÉVALUATION 3 ==>  Déveloper les pages webs : ==> À la place de faire des appels API, nous allons utiliser des formulaires (plus de .http ou swagger , c'était l'étape intermédiaire )
Développer 4 ==> Autorisation + authentification 

VOIR LE DOCUMENT DE RÉFÉRENCE POUR LES EVALUATIONS (ASP + NEXT) !!!

- Partie 1 - Développement d’API REST avec ASP.NET Core
==> Partie 1 - Développement d’API REST avec PRISMA 

https://drive.google.com/drive/folders/1eJRAtcveHcj8QjWkuw1zaxV1c5iiuybF?usp=sharing








 
